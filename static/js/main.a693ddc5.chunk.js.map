{"version":3,"sources":["components/EditorToolbar.js","components/Add.js","App.js","index.js"],"names":["CustomUndo","viewBox","className","points","d","CustomRedo","undoChange","this","quill","history","undo","redoChange","redo","Size","Quill","import","whitelist","register","Font","formats","QuillToolbar","props","undefined","toolbarId","id","value","selected","Add","useState","title","description","information","userInfo","setuserInfo","inputRef","useRef","EditorToolbar","theme","onChange","placeholder","modules","toolbar","container","handlers","delay","maxStack","userOnly","ref","onClick","delta","current","editor","getContents","a","pdfExporter","generatePdf","pdfBlob","saveAs","toPdf","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a693ddc5.chunk.js","sourcesContent":["import React from \"react\";\nimport { Quill } from \"react-quill\";\n\nconst CustomUndo = () => (\n  <svg viewBox=\"0 0 18 18\">\n    <polygon className=\"ql-fill ql-stroke\" points=\"6 10 4 12 2 10 6 10\" />\n    <path\n      className=\"ql-stroke\"\n      d=\"M8.09,13.91A4.6,4.6,0,0,0,9,14,5,5,0,1,0,4,9\"\n    />\n  </svg>\n);\n\nconst CustomRedo = () => (\n  <svg viewBox=\"0 0 18 18\">\n    <polygon className=\"ql-fill ql-stroke\" points=\"12 10 14 12 16 10 12 10\" />\n    <path\n      className=\"ql-stroke\"\n      d=\"M9.91,13.91A4.6,4.6,0,0,1,9,14a5,5,0,1,1,5-5\"\n    />\n  </svg>\n);\n\n// Undo and redo functions for Custom Toolbar\nfunction undoChange() {\n  this.quill.history.undo();\n}\nfunction redoChange() {\n  this.quill.history.redo();\n}\n\n// Add sizes to whitelist and register them\nconst Size = Quill.import(\"formats/size\");\nSize.whitelist = [\"extra-small\", \"small\", \"medium\", \"large\"];\nQuill.register(Size, true);\n\n// Add fonts to whitelist and register them\nconst Font = Quill.import(\"formats/font\");\nFont.whitelist = [\n  \"arial\",\n  \"comic-sans\",\n  \"courier-new\",\n  \"georgia\",\n  \"helvetica\",\n  \"Inter\",\n  \"lucida\",\n];\nQuill.register(Font, true);\n\n// Modules object for setting up the Quill editor\nexport const modules = (props) => ({\n  toolbar: {\n    container: \"#\" + props,\n    handlers: {\n      undo: undoChange,\n      redo: redoChange,\n    },\n  },\n  history: {\n    delay: 500,\n    maxStack: 100,\n    userOnly: true,\n  },\n});\n\nexport const formats = [\n  \"header\",\n  \"font\",\n  \"size\",\n  \"bold\",\n  \"italic\",\n  \"underline\",\n  \"align\",\n  \"strike\",\n  \"script\",\n  \"blockquote\",\n  \"background\",\n  \"list\",\n  \"bullet\",\n  \"indent\",\n  \"link\",\n  \"image\",\n  \"video\",\n  \"color\",\n  \"code-block\",\n];\n\nexport const QuillToolbar = (props) => {\n  return (\n    <>\n      {props.toolbarId !== undefined && (\n        <div id={props.toolbarId}>\n          <span className=\"ql-formats\">\n            <button className=\"ql-bold\" />\n            <button className=\"ql-italic\" />\n            <button className=\"ql-underline\" />\n            <button className=\"ql-strike\" />\n          </span>\n          <span className=\"ql-formats\">\n            <select className=\"ql-font\">\n              <option value=\"arial\"> Arial </option>\n              <option value=\"comic-sans\">Comic Sans</option>\n              <option value=\"courier-new\">Courier New</option>\n              <option value=\"georgia\">Georgia</option>\n              <option value=\"helvetica\">Helvetica</option>\n              <option value=\"Inter\" selected>\n                Inter\n              </option>\n              <option value=\"lucida\">Lucida</option>\n            </select>\n            <select className=\"ql-size\">\n              <option value=\"extra-small\">Extra Small</option>\n              <option value=\"small\">Small</option>\n              <option value=\"medium\" selected>\n                Medium\n              </option>\n              <option value=\"large\">Large</option>\n            </select>\n            <select className=\"ql-header\">\n              <option value=\"1\">Heading 1</option>\n              <option value=\"2\">Heading 2</option>\n              <option value=\"3\">Heading 3</option>\n              <option value=\"4\">Heading 4</option>\n              <option value=\"5\">Heading 5</option>\n              <option value=\"6\">Heading 6</option>\n              <option value=\"\" selected>\n                Normal\n              </option>\n            </select>\n          </span>\n          <span className=\"ql-formats\">\n            <button className=\"ql-list\" value=\"ordered\" />\n            <button className=\"ql-list\" value=\"bullet\" />\n            <button className=\"ql-indent\" value=\"-1\" />\n            <button className=\"ql-indent\" value=\"+1\" />\n          </span>\n          <span className=\"ql-formats\">\n            <button className=\"ql-script\" value=\"super\" />\n            <button className=\"ql-script\" value=\"sub\" />\n            <button className=\"ql-blockquote\" />\n            <button className=\"ql-direction\" />\n          </span>\n          <span className=\"ql-formats\">\n            <select className=\"ql-color\" />\n            <select className=\"ql-background\" />\n          </span>\n          <span className=\"ql-formats\">\n            <button className=\"ql-link\" />\n            <button className=\"ql-image\" />\n            <button className=\"ql-video\" />\n          </span>\n          <span className=\"ql-formats\">\n            <button className=\"ql-formula\" />\n            <button className=\"ql-code-block\" />\n            <button className=\"ql-clean\" />\n          </span>\n          <span className=\"ql-formats\">\n            <button className=\"ql-undo\">\n              <CustomUndo />\n            </button>\n            <button className=\"ql-redo\">\n              <CustomRedo />\n            </button>\n          </span>\n        </div>\n      )}\n    </>\n  );\n};\nexport default QuillToolbar;\n","import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nimport ReactQuill from \"react-quill\";\r\nimport EditorToolbar, { modules, formats } from \"./EditorToolbar\";\r\nimport { pdfExporter } from \"quill-to-pdf\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"./TextEditor.css\";\r\n\r\nfunction Add() {\r\n  const [userInfo, setuserInfo] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    information: \"\",\r\n  });\r\n\r\n  const inputRef = useRef();\r\n\r\n  const ondescription = (value) => {\r\n    setuserInfo({ ...userInfo, description: value });\r\n  };\r\n\r\n  const downloadPdf = () => {\r\n    const delta = inputRef.current.editor.getContents();\r\n    const toPdf = async () => {\r\n      const pdfBlob = await pdfExporter.generatePdf(delta);\r\n      saveAs(pdfBlob, \"pdf-export.pdf\");\r\n    };\r\n\r\n    toPdf();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <EditorToolbar toolbarId={\"t1\"} />\r\n      <ReactQuill\r\n        theme=\"snow\"\r\n        value={userInfo.description}\r\n        onChange={ondescription}\r\n        placeholder={\"HELLO I AM ABDUHAMID\"}\r\n        modules={modules(\"t1\")}\r\n        formats={formats}\r\n        ref={inputRef}\r\n      />\r\n      <button onClick={downloadPdf}>Download pdf</button>\r\n    </>\r\n  );\r\n}\r\nexport default Add;\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Add from \"./components/Add\";\n\nfunction App() {\n  return <Add />;\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}